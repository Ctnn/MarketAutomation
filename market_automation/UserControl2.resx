<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>